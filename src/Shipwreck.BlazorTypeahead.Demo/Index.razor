@page "/"
@inherits LayoutComponentBase

<div class="container">
    <div>
        @if (_Proxy == null)
        {
            <button class="btn btn-primary"
                    @onclick="@Initialize">
                Initialize
            </button>
        }
        else
        {
            <button class="btn btn-danger"
                    @onclick="@Destroy">
                Destroy
            </button>
        }
    </div>
    <div class="mt-4">
        <input @ref="@element"
               class="form-control"
               type="text"
               autocomplete="off"
               @bind="@query" />
    </div>
</div>

@code
{
    ElementReference element;
    string query;
    private TypeaheadProxy<State> _Proxy;

    [Inject]
    public IJSRuntime JS { get; set; }

    async void Initialize()
    {
        var ops = new TypeaheadOptions<State>
        {
            Source = State.All,
            Highlighter = (s, q) => $"<span class='text-light bg-dark mr-2'>{s.Postal}</span>{s.Name}",
            DisplayText = s => s.Name,
        };

        _Proxy = await JS.TypeaheadAsync(element, ops);
        await _Proxy.FocusAsync();
    }

    void Destroy()
    {
        _Proxy?.DestroyAsync();
        _Proxy = null;
    }

    public class State
    {
        public State(string name, string postal)
        {
            Name = name;
            Postal = postal;
        }
        public string Name { get; }
        public string Postal { get; }

        public static readonly State[] All =
        {
            new State("Alabama", "AL"),
            new State("Alaska", "AK"),
            new State("Arizona", "AZ"),
            new State("Arkansas", "AR"),
            new State("California", "CA"),
            new State("Colorado", "CO"),
            new State("Connecticut", "CT"),
            new State("Delaware", "DE"),
            new State("Florida", "FL"),
            new State("Georgia", "GA"),
            new State("Hawaii", "HI"),
            new State("Idaho", "ID"),
            new State("Illinois", "IL"),
            new State("Indiana", "IN"),
            new State("Iowa", "IA"),
            new State("Kansas", "KS"),
            new State("Kentucky", "KY"),
            new State("Louisiana", "LA"),
            new State("Maine", "ME"),
            new State("Maryland", "MD"),
            new State("Massachusetts", "MA"),
            new State("Michigan", "MI"),
            new State("Minnesota", "MN"),
            new State("Mississippi", "MS"),
            new State("Missouri", "MO"),
            new State("Montana", "MT"),
            new State("Nebraska", "NE"),
            new State("Nevada", "NV"),
            new State("New Hampshire", "NH"),
            new State("New Jersey", "NJ"),
            new State("New Mexico", "NM"),
            new State("New York", "NY"),
            new State("North Carolina", "NC"),
            new State("North Dakota", "ND"),
            new State("Ohio", "OH"),
            new State("Oklahoma", "OK"),
            new State("Oregon", "OR"),
            new State("Pennsylvania", "PA"),
            new State("Rhode Island", "RI"),
            new State("South Carolina", "SC"),
            new State("South Dakota", "SD"),
            new State("Tennessee", "TN"),
            new State("Texas", "TX"),
            new State("Utah", "UT"),
            new State("Vermont", "VT"),
            new State("Virginia", "VA"),
            new State("Washington", "WA"),
            new State("West Virginia", "WV"),
            new State("Wisconsin", "WI"),
            new State("Wyoming", "WY"),
        };
    }
}